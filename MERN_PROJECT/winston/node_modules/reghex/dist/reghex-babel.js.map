{"version":3,"file":"reghex-babel.js","sources":["../src/babel/plugin.js"],"sourcesContent":["import { makeHelpers } from './transform';\n\nexport default function reghexPlugin(babel, opts = {}) {\n  let helpers;\n\n  return {\n    name: 'reghex',\n    visitor: {\n      Program() {\n        helpers = makeHelpers(babel);\n      },\n      ImportDeclaration(path) {\n        if (opts.codegen === false) return;\n        helpers.updateImport(path);\n      },\n      TaggedTemplateExpression(path) {\n        if (helpers.isMatch(path) && helpers.getMatchImport(path)) {\n          if (opts.codegen === false) {\n            helpers.minifyMatch(path);\n          } else {\n            helpers.transformMatch(path);\n          }\n        }\n      },\n    },\n  };\n}\n"],"names":["reghexPlugin","babel","opts","let","TaggedTemplateExpression","codegen"],"mappings":";;AAEeA,QAASA,aAAY,CAACC,CAAD,EAAQC,CAAR,CAAmB;;;AACrDC;;;;8BAa8BC,QAAiC,EAAA;4CAElC,CAAA,OAAZC,CAAAA;KAfjBF;AADqD;;;"}